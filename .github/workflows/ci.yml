---
name: ci 

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v2
      - name: Configure CMake
        run: cmake -S $GITHUB_WORKSPACE -B $GITHUB_WORKSPACE/build
      - name: Build
        working-directory: build
        run: cmake --build .
      - name: Upload static lib
        uses: actions/upload-artifact@v2
        with:
          name: lib_gpio.a
          path: ${{runner.workspace}}/gpio/build/*.a*
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v2
      - name: install dependancies
        run: python3 -m pip install gcovr
      - name: Configure CMake
        run: cmake -S $GITHUB_WORKSPACE -B $GITHUB_WORKSPACE/build -DCMAKE_BUILD_TYPE=Debug
      - name: ========= DEBUG ===========
        run: tree
      - name: Build
        working-directory: build
        run: cmake --build .
      - name: Test
        working-directory: build
        run: GTEST_OUTPUT=xml:results/ GTEST_COLOR=1 ctest -V
      - name: Upload test results on failure
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: results_xml
          path: ${{runner.workspace}}/gpio/build/results/**/*.xml
      - name: gcov
        working-directory: build
        run: make cov
      - name: codecov push
        uses: codecov/codecov-action@v1
        with:
          files: ${{runner.workspace}}/gpio/build/cov.xml
  cppcheck:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v2
      - name: install cppcheck
        run: sudo apt install cppcheck -y
      - name: Execute cppcheck
        run: cppcheck src include
